name: Build APK

# Trigger the workflow on push or pull request to the main branch
on:
  push:
    branches:
      - master  # You can replace "main" with the name of your branch (e.g., "master")
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Set up JDK 17
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17' 
        distribution: "temurin" # Set to Java 17

    # Step 3: Set up Android SDK (using sdkmanager command)
    - name: Set up Android SDK
      run: |
        sudo apt update
        sudo apt install -y openjdk-17-jdk wget unzip
        mkdir -p $HOME/android-sdk
        wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -P $HOME/android-sdk
        unzip $HOME/android-sdk/commandlinetools-linux-9477386_latest.zip -d $HOME/android-sdk
        yes | $HOME/android-sdk/cmdline-tools/bin/sdkmanager --licenses
        $HOME/android-sdk/cmdline-tools/bin/sdkmanager "platform-tools" "build-tools;30.0.3" "platforms;android-30"

    # Step 4: Gradle Build (using the Gradle Wrapper)
    - name: Build APK with Gradle
      run: ./gradlew assembleRelease

    # Step 5: Upload APK as an artifact (using actions/upload-artifact@v4)
    - name: Upload APK
      uses: actions/upload-artifact@v4  # Use the latest version (v4)
      with:
        name: app-release
        path: app/build/outputs/apk/release/app-release.apk
